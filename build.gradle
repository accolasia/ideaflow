buildscript {
	ext {
		springBootVersion = "1.3.5.RELEASE"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.bancvue:gradle-core:1+"
		classpath "net.jokubasdargis.buildtimer:gradle-plugin:0.1.1"
	}
}

apply plugin: "com.bancvue.core-oss"
apply plugin: "com.bancvue.maven-publish-ext"
apply plugin: "spring-boot"
apply plugin: "net.jokubasdargis.build-timer"

repositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	client
}

sourceSets {
	client {
		java {
			srcDir "src/main/java"
			include "org/openmastery/rest/**"
			include "org/openmastery/publisher/api/**"
			include "org/openmastery/publisher/client/**"
		}
	}
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "org.springframework.boot:spring-boot-starter-jersey"
	compile "org.codehaus.groovy:groovy-all:2.4.3"
	compile "com.bancvue:common-rest:2.+"
	compile 'joda-time:joda-time:2.9.4'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.7.5'

	compile("net.sf.dozer:dozer:5.5.1") {
		exclude group: "org.slf4j"
	}

	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "postgresql:postgresql:9.0-801.jdbc4"
	compile "org.liquibase:liquibase-core"

	// Utilities
	compile "com.google.guava:guava:18.0"
	compile "org.projectlombok:lombok:1.16.4"

	clientCompile "com.bancvue:common-rest:2.+"
	clientCompile "org.projectlombok:lombok:1.16.4"
	clientCompile 'joda-time:joda-time:2.9.4'
	clientCompile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.7.5'

	mainTestCompile 'com.thedeanda:lorem:2.0'
	mainTestCompile "org.fluttercode.datafactory:datafactory:0.8"
	mainTestCompile("org.spockframework:spock-spring:1.0-groovy-2.4") {
		exclude group: "org.codehaus.groovy"
	}

	testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "commons-io:commons-io:2.4"
	testCompile "cglib:cglib-nodep:3.2.0"
}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

compileClientJava {
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
}

publishing_ext {
	publication('client')
}

task pullPostgres(type: Exec) {
	commandLine "docker pull postgres:9.4".split(/\s+/)
}

task removePostgres(type: Exec) {
	commandLine "docker rm -f postgres".split(/\s+/)
	ignoreExitValue true
}

task createPostgres(type: Exec) {
	commandLine 'docker create --name=postgres --publish=5432:5432 --env="POSTGRES_USER=postgres" --env="POSTGRES_PASSWORD=postgres" postgres:9.4'.split(/\s+/)
	mustRunAfter pullPostgres, removePostgres
}

task startPostgres(type: Exec) {
	commandLine "docker start postgres".split(/\s+/)
	mustRunAfter createPostgres
}


task refreshPostgres(dependsOn: [removePostgres, createPostgres, startPostgres])
